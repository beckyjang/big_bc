input {
  beats {
    port => 5000
  }
}

filter {
  if ([fields][log_type] == "transaction") {
          grok {
                match => { "message" => "%{TIMESTAMP_ISO8601:logtime} %{WORD:loglevel} %{SPACE}%{NUMBER:dummy} %{DATA:loggername}: %{DATA:txid}\, %{DATA:requestId}\, %{TIMESTAMP_ISO8601:timeStampIso}\, %{NUMBER:timeMillis}\, %{DATA:ssgnodeName}\, %{DATA:tenantName}\, %{IP:remoteIp}\, %{WORD:method}\, %{URIPATHPARAM:uriPathParam}\, %{DATA:serviceName}\, %{DATA:organizationUuid}\, %{DATA:organizationName}\, %{DATA:applicationUuid}\, %{DATA:applicationName}\, %{DATA:apiUuid}\, %{DATA:quotaDaily}\, %{DATA:quotaMonthly}\, %{DATA:authType}\, %{NUMBER:responseCode}\, %{DATA:errorCode}\, %{DATA:isRequestCompleted}\, %{DATA:isRequestAuthorized}\, %{NUMBER:elapsedTime}\, %{NUMBER:routingTotalTime}\, %{DATA:authenticatedUserId}\, %{DATA:isSuccess}\, %{DATA:isFailure}\,%{GREEDYDATA:remain}" }
          }
  }
  else if ([fields][log_type] == "issued-token") {
          grok {
                match => { "message" => "%{NUMBER:dummy}: %{DATA:txid}\, %{DATA:requestId}\, %{TIMESTAMP_ISO8601:timeStampIso}\, %{NUMBER:timeMillis}\, %{DATA:ssgnodeName}\, %{IP:remoteIp}\, %{WORD:method}\, %{URIPATHPARAM:uriPathParam}\, %{NUMBER:responseCode:int}\, %{DATA:errorCode}\, %{NUMBER:elapsedTime:int}\, %{DATA:clientId}\, %{DATA:clientType}\, %{DATA:accessToken}\, %{DATA:refreshToken}\, (%{NUMBER:accessTokenLifetime:int})?\, (%{NUMBER:accessTokenExpiration:int})?\, %{DATA:grantedScope}\, %{DATA:owner}\, %{DATA:grantType}\, %{DATA:appName}\,%{GREEDYDATA:remain}" }
          }
  }
  else if ([fields][log_type] == "api-tr") {
        grok {
                match => { "message" => "\[%{DATA:DUMMY}\]%{TIMESTAMP_ISO8601:timeStampIso}\,%{NUMBER:elapsedTime:int}\,%{DATA:PROGRAM_ID}\,%{DATA:CLIENT_ID}\,%{DATA:REQUEST_ID}\,%{DATA:TX_ID}\,%{DATA:USER_ID}\,%{DATA:API_ID}\,%{DATA:TARGET}\,%{DATA:SERVICE_ID}\,%{DATA:RTN_CODE}\,%{DATA:MSG_CODE}\,%{DATA:MSG}\,%{DATA:SERVICE_HEADER}\,%{GREEDYDATA:SERVICE_INPUT}" }
        }
  }

}

output {

    if ([fields][log_type] == "transaction") {
              elasticsearch {
                        hosts => "elasticsearch:9200"
                        user => "elastic"
                        password => "elastic"
                        index => "%{[@metadata][beat]}_%{[fields][log_type]}_%{+YYYY.MM.dd}"
                        manage_template => true
                        template => "/usr/share/logstash/transaction-mapping.json"
                        template_name => "filebeat-transaction-template"
                        template_overwrite => true
              }
    }
    else {
            elasticsearch {
                hosts => "elasticsearch:9200"
                user => "elastic"
                password => "elastic"
                index => "%{[@metadata][beat]}_%{[fields][log_type]}_%{+YYYY.MM.dd}"
            }
    }
}

